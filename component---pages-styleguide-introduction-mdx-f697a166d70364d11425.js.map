{"version":3,"sources":["webpack:///../pages/styleguide/introduction.mdx","webpack:///../components/BlcGrid/BlcGridBase.js","webpack:///../components/BlcGrid/Container/index.js","webpack:///../components/BlcGrid/Box/index.js","webpack:///../components/BlcGrid/Row/index.js","webpack:///../components/BlcGrid/Column/index.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","col","margin","size","marginSmallest","parentName","isMDXComponent","blcGridBase","blcContainer","util","children","blcBox","background","color","borderColor","borderStyle","borderWidth","height","overflow","padding","textAlign","BlcRow","ref","useRef","useState","rowWidth","setRowWidth","setGutter","setColumnCount","React","useEffect","setColumnTotal","setTotalRowWidth","columnGutter","columnTotal","totalRowWidth","alignContent","alignItems","direction","gutter","justifyContent","wrap","blcColumn","align","order"],"mappings":"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","file":"component---pages-styleguide-introduction-mdx-f697a166d70364d11425.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/cjpablo/Backlot/webapp/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { BlcH6 } from 'components/BlcTitle';\nimport { BlcRow, BlcColumn } from 'components/BlcGrid';\nimport { BlcParagraph } from 'components/BlcText';\nimport { size } from 'public/styles';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"introduction\"\n    }}>{`Introduction`}</h1>\n    <p>{`As BacklotCars continues to grow, both as a product and a company, one challenge we are faced with is learning how to refine the brand identity and apply it cohesively to each of our products. We created this styleguide to act as a central location where we store all the inventory of UI components, brand guidelines, brand assets, code snippets, developer guidelines and more.`}</p>\n    <p>{`An organization projects its image, both to the outside and to the people who are part of it, in the way it communicates. Style, formal coherence and constancy in a company's communications ultimately define its personality, the corporate identity that makes a company identifiable among the universe of companies and market services.`}</p>\n    <p>{`The purpose of this manual is to describe, in a clear and univocal way, the corporate identity of BacklotCars, and to explain how this identity should be developed in the different communicative applications necessary for the company.`}</p>\n    <p>{`This manual aims, therefore, to standardize and homogenize the graphic parameters that should be used, in a uniform way, by all those responsible for developing and representing the image of BacklotCars. As a standard for the application of corporate identity, it should be read carefully and understood before proceeding to put into practice the components of that identity.`}</p>\n    <p>{`Properly applied, this manual ensures the achievement of a homogeneous, attractive and easily identifiable image for our organization.while optimizing the effectiveness of its products. communications.`}</p>\n    <p>{`Anyone working on the BacklotCars products is encouraged to stay familiar with this styleguide and help ensure that it is kept up-to-date.`}</p>\n    <h4 {...{\n      \"id\": \"goals\"\n    }}>{`Goals`}</h4>\n    <BlcRow mdxType=\"BlcRow\">\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcH6 margin={size.marginSmallest} mdxType=\"BlcH6\">Cohesive design language</BlcH6>\n\t\t<BlcParagraph mdxType=\"BlcParagraph\">Refine our visual language to be simpler, more fun and more communicative.</BlcParagraph>\n\t</BlcColumn>\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcH6 margin={size.marginSmallest} mdxType=\"BlcH6\">Platform agnostic system</BlcH6>\n\t\t<BlcParagraph mdxType=\"BlcParagraph\">Develop a single, unified system that is transferrable across all platforms and devices.</BlcParagraph>\n\t</BlcColumn>\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcH6 margin={size.marginSmallest} mdxType=\"BlcH6\">Expedite the design process</BlcH6>\n\t\t<BlcParagraph mdxType=\"BlcParagraph\">By abstracting our base styles layer, now developers can churn out UIs with minimal design input.</BlcParagraph>\n\t</BlcColumn>\n    </BlcRow>\n    <h2 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/setup\"\n      }}>{`Backlot Cars Next.js Front-end`}</a></p>\n    <h2 {...{\n      \"id\": \"code-guidelines\"\n    }}>{`Code guidelines`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/code-guidelines\"\n      }}>{`Airbnb React/JSX Style Guide`}</a></p>\n    <h2 {...{\n      \"id\": \"design\"\n    }}>{`Design`}</h2>\n    <p>{`Corporate standards normalize the correct use of the BacklotCars brand. These documents define the symbols and attributes of the visual identity: brand, integration, black and negative versions, colors and typographies.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/design/brands\"\n      }}>{`Brands`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/design/typography\"\n      }}>{`Typography`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/design/color-scheme\"\n      }}>{`Color scheme`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/design/layout\"\n      }}>{`Layout`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/design/icons\"\n      }}>{`Icons`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { size } from 'public/styles';\n\nconst blcGridBase = props => (\n\t<div>\n\t\t{props.children}\n\n\t\t<style jsx>{`\n\t\t\tbox-sizing: border-box;\n\t\t\tmargin: ${props.margin} auto;\n\t\t\tmax-width: ${props.size};\n\t\t\tpadding: 0 ${size.marginSmaller};\n\t\t\twidth: 100%;\n\t\t`}</style>\n\t</div>\n);\n\nblcGridBase.propTypes = {\n\tmargin: PropTypes.string,\n\tsize: PropTypes.string\n}\n\nblcGridBase.defaultProps = {\n\tmargin: '0',\n\tsize: '100%'\n}\n\nexport default blcGridBase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BlcGridBase from 'components/BlcGrid/BlcGridBase';\nimport { util } from 'public/styles';\n\nconst blcContainer = props => (\n\t<BlcGridBase size={util.blcContainerSize(props.size)} margin={props.margin}>\n\t\t{props.children}\n\t</BlcGridBase>\n);\n\nblcContainer.propTypes = {\n\tchildren: PropTypes.node,\n\tmargin: PropTypes.string,\n\tsize: PropTypes.oneOf([null, 'smallest', 'smaller', 'larger', `largest`])\n}\n\nblcContainer.defaultProps = {\n\tchildren: null,\n\tmargin: '0',\n\tsize: null\n}\n\nexport default blcContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { color, size } from 'public/styles';\n\nconst blcBox = props => (\n\t<div>\n\t\t{props.children}\n\n\t\t<style jsx>{`\n\t\t\tbackground-color: ${props.background};\n\t\t\tborder-color: ${props.borderColor};\n\t\t\tborder-style: ${props.borderStyle};\n\t\t\tborder-width: ${props.borderWidth}px;\n\t\t\tbox-sizing: border-box;\n\t\t\theight: ${props.height};\n\t\t\tmargin: ${props.margin} auto;\n\t\t\toverflow: ${props.overflow};\n\t\t\tpadding: ${props.padding};\n\t\t\ttext-align: ${props.textAlign};\n\t\t`}</style>\n\t</div>\n);\n\nblcBox.propTypes = {\n\tbackground: PropTypes.string,\n\tborderColor: PropTypes.string,\n\tborderStyle: PropTypes.oneOf(['solid', 'dotted', 'dashed']),\n\tborderWidth: PropTypes.number,\n\theight: PropTypes.oneOf(['0', '100%', 'fit-content']),\n\tmargin: PropTypes.string,\n\toverflow: PropTypes.oneOf(['visible', 'hidden', 'scroll', 'auto']),\n\tpadding: PropTypes.string,\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right'])\n}\n\nblcBox.defaultProps = {\n\tbackground: color.smokeLight,\n\tborderColor: color.smokeDark,\n\tborderStyle: 'solid',\n\tborderWidth: 0,\n\theight: 'fit-content',\n\tmargin: '0',\n\toverflow: 'visible',\n\tpadding: size.marginSmaller,\n\ttextAlign: 'left'\n}\n\nexport default blcBox;\n","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { size, util } from 'public/styles';\n\nconst BlcRow = props => {\n\tconst ref = useRef(null);\n\tconst [rowWidth, setRowWidth] = useState(0);\n\n\tconst setGutter = util.blcColumnGutter(props.gutter);\n\tconst setColumnCount = React.Children.count(props.children);\n\n\tuseEffect(() => {\n\t\tsetRowWidth(ref.current.offsetWidth);\n\t}, [rowWidth]);\n\n\tlet setColumnTotal \t = size.columns;\n\tlet setGutterCount \t = setColumnCount - 1;\n\tlet setColumnGutter\t = setColumnCount <= 1 ? 0 : setGutter * setGutterCount;\n\tlet setTotalRowWidth = rowWidth - setColumnGutter;\n\n\treturn (\n\t\t<div className={props.gutter} ref={ref}>\n\t\t\t{React.Children.map(props.children, (child) => React.cloneElement(child,\n\t\t\t\t{\n\t\t\t\t\tcolumnGutter: \tsetGutter,\n\t\t\t\t\tcolumnTotal: \tsetColumnTotal,\n\t\t\t\t\ttotalRowWidth: \tsetTotalRowWidth\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\t<style jsx>{`\n\t\t\t\talign-content: ${props.alignContent};\n\t\t\t\talign-items: ${props.alignItems};\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: ${props.direction};\n\t\t\t\tflex-flow: ${props.wrap};\n\t\t\t\tflex-wrap: ${props.wrap};\n\t\t\t\tjustify-content: ${props.justifyContent};\n\t\t\t\tmargin: ${props.margin} auto;\n\t\t\t\twidth: 100%;\n\t\t\t`}</style>\n\t\t</div>\n\t)\n};\n\n// ${util.blcColumnGutter(props.gutter)}px\n\nBlcRow.propTypes = {\n\talignContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly', 'stretch']),\n\talignItems: PropTypes.oneOf(['stretch', 'flex-start', 'flex-end', 'center']),\n\tdirection: PropTypes.oneOf(['row', 'row-reverse']),\n\tgutter: PropTypes.oneOf([null, 'smallest', 'smaller', 'inherit', 'larger', 'largest']),\n\tjustifyContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),\n\tmargin: PropTypes.string,\n\twrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse'])\n}\n\nBlcRow.defaultProps = {\n\talignContent: 'stretch',\n\talignItems: 'stretch',\n\tdirection: 'row',\n\tgutter: null,\n\tjustifyContent: 'flex-start',\n\tmargin: '0',\n\twrap: 'wrap'\n}\n\n\nexport default BlcRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst blcColumn = props => (\n\t<div className={'col-' + props.col}>\n\t\t{props.children}\n\n\t\t<style jsx>{`\n\t\t\tdiv {\n\t\t\t\talign-self: ${props.align};\n\t\t\t\torder: ${props.order};\n\t\t\t\tmargin: ${props.margin} ${props.columnGutter / 2}px;\n\t\t\t\twidth: ${props.totalRowWidth / props.columnTotal * props.col}px;\n\t\t\t}\n\n\t\t\tdiv:first-of-type { margin-left: 0; }\n\t\t\tdiv:last-of-type { margin-right: 0; }\n\t\t`}</style>\n\t</div>\n);\n\nblcColumn.propTypes = {\n\talign: PropTypes.oneOf(['auto', 'stretch', 'flex-start', 'flex-end', 'center']),\n\tcol: PropTypes.number,\n\tchildren: PropTypes.node,\n\tmargin: PropTypes.string,\n\torder: PropTypes.number,\n\tcolumnGutter: PropTypes.number.isRequired,\n\ttotalRowWidth: PropTypes.number.isRequired,\n\tcolumnTotal: PropTypes.number.isRequired\n}\n\nblcColumn.defaultProps = {\n\talign: 'auto',\n\tcol: 12,\n\tchildren: null,\n\tmargin: '0',\n\torder: 0\n}\n\nexport default blcColumn;\n"],"sourceRoot":""}