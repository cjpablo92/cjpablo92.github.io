{"version":3,"sources":["webpack:///../components/BlcGrid/BlcGridBase.js","webpack:///../components/BlcGrid/Container/index.js","webpack:///../components/BlcGrid/Box/index.js","webpack:///../components/BlcGrid/Row/index.js","webpack:///../components/BlcGrid/Column/index.js","webpack:///../pages/styleguide/color-scheme.mdx"],"names":["blcGridBase","props","size","margin","blcContainer","util","children","blcBox","background","color","borderColor","borderStyle","borderWidth","height","overflow","padding","textAlign","BlcRow","ref","useRef","useState","rowWidth","setRowWidth","setGutter","setColumnCount","React","useEffect","setColumnTotal","setTotalRowWidth","columnGutter","columnTotal","totalRowWidth","alignContent","alignItems","direction","gutter","justifyContent","wrap","blcColumn","align","col","order","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","backlotLight","inverted","display","marginSmallest","backlot","backlotDark","floatLight","float","floatDark","transportLight","transport","transportDark","black","white","asphaltLight","asphalt","asphaltDark","grayLight","gray","grayDark","smokeLight","smoke","smokeDark","successLight","success","successDark","warningLight","warning","warningDark","alertLight","alert","alertDark","isMDXComponent"],"mappings":"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","file":"component---pages-styleguide-color-scheme-mdx-22e54e1b39194a15da6b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { size } from 'public/styles';\n\nconst blcGridBase = props => (\n\t<div>\n\t\t{props.children}\n\n\t\t<style jsx>{`\n\t\t\tbox-sizing: border-box;\n\t\t\tmargin: ${props.margin} auto;\n\t\t\tmax-width: ${props.size};\n\t\t\tpadding: 0 ${size.marginSmaller};\n\t\t\twidth: 100%;\n\t\t`}</style>\n\t</div>\n);\n\nblcGridBase.propTypes = {\n\tmargin: PropTypes.string,\n\tsize: PropTypes.string\n}\n\nblcGridBase.defaultProps = {\n\tmargin: '0',\n\tsize: '100%'\n}\n\nexport default blcGridBase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BlcGridBase from 'components/BlcGrid/BlcGridBase';\nimport { util } from 'public/styles';\n\nconst blcContainer = props => (\n\t<BlcGridBase size={util.blcContainerSize(props.size)} margin={props.margin}>\n\t\t{props.children}\n\t</BlcGridBase>\n);\n\nblcContainer.propTypes = {\n\tchildren: PropTypes.node,\n\tmargin: PropTypes.string,\n\tsize: PropTypes.oneOf([null, 'smallest', 'smaller', 'larger', `largest`])\n}\n\nblcContainer.defaultProps = {\n\tchildren: null,\n\tmargin: '0',\n\tsize: null\n}\n\nexport default blcContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { color, size } from 'public/styles';\n\nconst blcBox = props => (\n\t<div>\n\t\t{props.children}\n\n\t\t<style jsx>{`\n\t\t\tbackground-color: ${props.background};\n\t\t\tborder-color: ${props.borderColor};\n\t\t\tborder-style: ${props.borderStyle};\n\t\t\tborder-width: ${props.borderWidth}px;\n\t\t\tbox-sizing: border-box;\n\t\t\theight: ${props.height};\n\t\t\tmargin: ${props.margin} auto;\n\t\t\toverflow: ${props.overflow};\n\t\t\tpadding: ${props.padding};\n\t\t\ttext-align: ${props.textAlign};\n\t\t`}</style>\n\t</div>\n);\n\nblcBox.propTypes = {\n\tbackground: PropTypes.string,\n\tborderColor: PropTypes.string,\n\tborderStyle: PropTypes.oneOf(['solid', 'dotted', 'dashed']),\n\tborderWidth: PropTypes.number,\n\theight: PropTypes.oneOf(['0', '100%', 'fit-content']),\n\tmargin: PropTypes.string,\n\toverflow: PropTypes.oneOf(['visible', 'hidden', 'scroll', 'auto']),\n\tpadding: PropTypes.string,\n\ttextAlign: PropTypes.oneOf(['left', 'center', 'right'])\n}\n\nblcBox.defaultProps = {\n\tbackground: color.smokeLight,\n\tborderColor: color.smokeDark,\n\tborderStyle: 'solid',\n\tborderWidth: 0,\n\theight: 'fit-content',\n\tmargin: '0',\n\toverflow: 'visible',\n\tpadding: size.marginSmaller,\n\ttextAlign: 'left'\n}\n\nexport default blcBox;\n","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { size, util } from 'public/styles';\n\nconst BlcRow = props => {\n\tconst ref = useRef(null);\n\tconst [rowWidth, setRowWidth] = useState(0);\n\n\tconst setGutter = util.blcColumnGutter(props.gutter);\n\tconst setColumnCount = React.Children.count(props.children);\n\n\tuseEffect(() => {\n\t\tsetRowWidth(ref.current.offsetWidth);\n\t}, [rowWidth]);\n\n\tlet setColumnTotal \t = size.columns;\n\tlet setGutterCount \t = setColumnCount - 1;\n\tlet setColumnGutter\t = setColumnCount <= 1 ? 0 : setGutter * setGutterCount;\n\tlet setTotalRowWidth = rowWidth - setColumnGutter;\n\n\treturn (\n\t\t<div className={props.gutter} ref={ref}>\n\t\t\t{React.Children.map(props.children, (child) => React.cloneElement(child,\n\t\t\t\t{\n\t\t\t\t\tcolumnGutter: \tsetGutter,\n\t\t\t\t\tcolumnTotal: \tsetColumnTotal,\n\t\t\t\t\ttotalRowWidth: \tsetTotalRowWidth\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\t<style jsx>{`\n\t\t\t\talign-content: ${props.alignContent};\n\t\t\t\talign-items: ${props.alignItems};\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: ${props.direction};\n\t\t\t\tflex-flow: ${props.wrap};\n\t\t\t\tflex-wrap: ${props.wrap};\n\t\t\t\tjustify-content: ${props.justifyContent};\n\t\t\t\tmargin: ${props.margin} auto;\n\t\t\t\twidth: 100%;\n\t\t\t`}</style>\n\t\t</div>\n\t)\n};\n\n// ${util.blcColumnGutter(props.gutter)}px\n\nBlcRow.propTypes = {\n\talignContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly', 'stretch']),\n\talignItems: PropTypes.oneOf(['stretch', 'flex-start', 'flex-end', 'center']),\n\tdirection: PropTypes.oneOf(['row', 'row-reverse']),\n\tgutter: PropTypes.oneOf([null, 'smallest', 'smaller', 'inherit', 'larger', 'largest']),\n\tjustifyContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-between', 'space-around', 'space-evenly']),\n\tmargin: PropTypes.string,\n\twrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse'])\n}\n\nBlcRow.defaultProps = {\n\talignContent: 'stretch',\n\talignItems: 'stretch',\n\tdirection: 'row',\n\tgutter: null,\n\tjustifyContent: 'flex-start',\n\tmargin: '0',\n\twrap: 'wrap'\n}\n\n\nexport default BlcRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst blcColumn = props => (\n\t<div className={'col-' + props.col}>\n\t\t{props.children}\n\n\t\t<style jsx>{`\n\t\t\tdiv {\n\t\t\t\talign-self: ${props.align};\n\t\t\t\torder: ${props.order};\n\t\t\t\tmargin: ${props.margin} ${props.columnGutter / 2}px;\n\t\t\t\twidth: ${props.totalRowWidth / props.columnTotal * props.col}px;\n\t\t\t}\n\n\t\t\tdiv:first-of-type { margin-left: 0; }\n\t\t\tdiv:last-of-type { margin-right: 0; }\n\t\t`}</style>\n\t</div>\n);\n\nblcColumn.propTypes = {\n\talign: PropTypes.oneOf(['auto', 'stretch', 'flex-start', 'flex-end', 'center']),\n\tcol: PropTypes.number,\n\tchildren: PropTypes.node,\n\tmargin: PropTypes.string,\n\torder: PropTypes.number,\n\tcolumnGutter: PropTypes.number.isRequired,\n\ttotalRowWidth: PropTypes.number.isRequired,\n\tcolumnTotal: PropTypes.number.isRequired\n}\n\nblcColumn.defaultProps = {\n\talign: 'auto',\n\tcol: 12,\n\tchildren: null,\n\tmargin: '0',\n\torder: 0\n}\n\nexport default blcColumn;\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/cjpablo/Backlot/webapp/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { BlcBox, BlcRow, BlcColumn } from 'components/BlcGrid';\nimport { BlcText, BlcLabel } from 'components/BlcText';\nimport { color, size } from 'public/styles';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"color-scheme\"\n    }}>{`Color scheme`}</h1>\n    <p>{`Color is a fundamental component of BacklotCars visual identity and contributes in an essential way to systematize your communications.`}</p>\n    <p>{`In order to guarantee the correct reproduction of the brand in different media, we gather in this page the different compositions and patterns of the corporate color.`}</p>\n    <h2 {...{\n      \"id\": \"brand-colors\"\n    }}>{`Brand colors`}</h2>\n    <p>{`Primary brand colors are used for elements that must reflect BacklotCars’ brand. Each color has a darker and aLighter shade.`}</p>\n    <BlcRow margin={size.margin} mdxType=\"BlcRow\">\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.backlotLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">backlotLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.backlotLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.backlot} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">backlot</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.backlot}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.backlotDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">backlotDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.backlotDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.floatLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">floatLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.floatLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.float} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">float</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.float}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.floatDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">floatDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.floatDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.transportLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">transportLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.transportLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.transport} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">transport</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.transport}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.transportDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">transportDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.transportDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n    </BlcRow>\n    <h2 {...{\n      \"id\": \"grayscale-colors\"\n    }}>{`Grayscale colors`}</h2>\n    <p>{`Grey colors are used for text, backgrounds, lines and borders. Smoke and Snow have two darker shades, which are used for icons and backgrounds.`}</p>\n    <BlcRow margin={size.margin} gutter=\"largest\" mdxType=\"BlcRow\">\n\t<BlcColumn col={4} gutter=\"largest\" mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.black} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">black</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.black}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n\t<BlcColumn col={4} gutter=\"largest\" mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.white} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel mdxType=\"BlcLabel\">white</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} mdxType=\"BlcText\">{color.white}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n    </BlcRow>\n    <BlcRow margin={size.margin} mdxType=\"BlcRow\">\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.asphaltLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">asphaltLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.asphaltLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.asphalt} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">asphalt</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.asphalt}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.asphaltDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">asphaltDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.asphaltDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.grayLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">grayLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.grayLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.gray} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">gray</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.gray}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.grayDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">grayDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.grayDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.smokeLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel mdxType=\"BlcLabel\">smokeLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} mdxType=\"BlcText\">{color.smokeLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.smoke} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel mdxType=\"BlcLabel\">smoke</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} mdxType=\"BlcText\">{color.smoke}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.smokeDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel mdxType=\"BlcLabel\">smokeDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} mdxType=\"BlcText\">{color.smokeDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n    </BlcRow>\n    <h2 {...{\n      \"id\": \"ui-colors\"\n    }}>{`UI colors`}</h2>\n    <p>{`The main UI colors are used for action buttons, alert messages, and form elements. Input fields, for example, can get positive and negative feedback, whereas alert messages can have warning feedback.`}</p>\n    <BlcRow margin={size.margin} mdxType=\"BlcRow\">\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.successLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">successLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.successLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.success} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">success</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.success}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.successDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">successDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.successDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.warningLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">warningLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.warningLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.warning} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">warning</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.warning}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.warningDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">warningDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.warningDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n\t<BlcColumn col={4} mdxType=\"BlcColumn\">\n\t\t<BlcBox background={color.alertLight} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">alertLight</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.alertLight}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.alert} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">alert</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.alert}</BlcText>\n\t\t</BlcBox>\n\t\t<BlcBox background={color.alertDark} mdxType=\"BlcBox\">\n\t\t\t<BlcLabel inverted mdxType=\"BlcLabel\">alertDark</BlcLabel>\n\t\t\t<BlcText display=\"block\" margin={size.marginSmallest} inverted mdxType=\"BlcText\">{color.alertDark}</BlcText>\n\t\t</BlcBox>\n\t</BlcColumn>\n    </BlcRow>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}